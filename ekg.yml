version: "3"

services:
  mongo:
    image: mongo
    # ports:
    #   - "27107:27107"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role != manager]

  history:
    image: shadowit/history
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role != manager]
    # ports:
    #   - "3001:3001"
    depends_on:
      - mongo

  subscription:
    image: shadowit/subscription
    # ports:
    #   - "3003:3003"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role != manager]
    depends_on:
      - mongo

  commuter:
    image: shadowit/commuter
    # ports:
    #   - "3004:3004"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role != manager]
    depends_on:
      - history

  cadence:
    image: shadowit/cadence
    # ports:
    #   - "3002:3002"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role != manager]
    depends_on:
      - subscription
      - commuter

  monitor:
    image: shadowit/monitor
    ports:
      - "3000:3000"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role != manager]
    depends_on:
      - history

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
      mode: global
        
