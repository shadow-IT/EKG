version: "3"
services:
  redis-status:
    image: redis
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "6379:6379"

  redis-subscription:
    image: redis
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "6380:6379"

  cadence:
    image: shadowit/cadence
    ports:
      - "3002:3002"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - subscription

  history:
    image: shadowit/history
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "3001:3001"
    depends_on:
      - redis-status

  subscription:
    image: shadowit/subscription
    ports:
      - "3003:3003"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - redis-subscription

  commuter:
    image: shadowit/commuter
    ports:
      - "3004:3004"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - history
      - subscription
      - cadence

  monitor:
    image: shadowit/monitor
    ports:
      - "3000:3000"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - history

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
        